#!/usr/bin/env bash
#
# A light wrapper for using the services tool via qcr command. 
# This is deliberately light, so that users should never 
# have to update this script once they have it, but will
# always have access to the latest service tool.
#
# It installs (git clones) the services tool if it doesn't
# exist, and then calls the services tool entry point script.
# Information on the services tool can be found at:
#     https://github.com/qcr/services
# 
# For usage on how to use the services tool run: 
#     qcr services -h
#
# Author: James Mount
# Version: 0.2.0


#################
### VARIABLES ###
#################


# The URL for this tool's repo
# Used for cloning - Recommend to use SSH
REPO_URL="git@github.com:qcr/services-config"

# Tool name - name of entry point script in the separate repo.
# The recommendation is the script here in qcr/scripts matches
# the name of the script in the separate repo. However,
# can change TOOL_NAME if they are different.
TOOL_NAME="$(basename $(readlink -f $0))"

# The directory of containing this script
SCRIPT_DIR="$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )"

# The install directory to the tools directory
INSTALL_DIR="$(dirname ${SCRIPT_DIR})/installed-tools/${TOOL_NAME}"


#################
### FUNCTIONS ###
#################



############
### MAIN ###
############

# Get arguments passed by qcr script, 
# Arguments passed are:
#   USE_CACHED
#   ARGS_TO_TOOL
USE_CACHED="${@:1:1}"
ARGS=( "${@:2}" )

# Source common
source $(dirname ${SCRIPT_DIR})/common

# Bail if git isn't found
git_command_exists

# Install tool, if required
install_tool ${INSTALL_DIR} ${TOOL_NAME}

# check if latest
if [ ${USE_CACHED} == false ]; then
    check_cloned_repo_is_latest ${INSTALL_DIR} ${TOOL_NAME}
fi
 
# Run services tool with provided command and arguments
printf "${INFO}Calling '${YELLOW}${INSTALL_DIR}/${TOOL_NAME}${RESET}'"
if [ ! ${#ARGS[@]} -eq 0 ]; then
  printf " with args '${YELLOW}${ARGS[*]}${RESET}'"
fi
printf "\n"
${INSTALL_DIR}/${TOOL_NAME}  "${ARGS[@]}"
