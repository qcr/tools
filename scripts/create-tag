#!/usr/bin/env bash
#
# Tools for making QR tags to stick on robots. Usage is:
#   qcr ceate_tag \
#     <title to put on pdf> \
#     <contact email to put on pdf> \
#     <url for the QR tag to point to>


set -euo pipefail

#################
### VARIABLES ###
#################

JOBNAME="robot_tag"
TMP_DIR="/tmp/robot_tag"

IMAGE_URL="https://github.com/qcr/tools/raw/master/misc/qcr_header.jpg"
IMAGE_TMP="$TMP_DIR/qcr_header.jpg"


# The name of this script, and the directory where it is located
SCRIPT_NAME="$(basename $(readlink -f $0))"
SCRIPT_DIR="$(dirname $(readlink -f $0))"

#################
### FUNCTIONS ###
#################

function print_usage(){
  printf "\nCreate a QR Code PDF.

Usage:
  create_tag <TITLE> <EMAIL> <URL>

"

  exit 0
}


###################
### MAIN SCRIPT ###
###################

# Get arguments passed by qcr script, 
# Arguments passed are:
#   USE_CACHED
#   ARGS_TO_TOOL
USE_CACHED="${@:1:1}"
ARGS=( "${@:2}" )

# Parse arguments
PARSED_ARGS=$(getopt -a -q -n ${SCRIPT_NAME} -o 'h' --long 'help' -- "${ARGS[@]}")
eval set -- "${PARSED_ARGS}"
while true; do
  case "$1" in 
    -h|--help) 
      print_usage; ;;
    --) shift; break ;;
    # invalid option was passed, print usage
    *)
      printf "${ERROR}Unrecognized option '$1'\n" 
      print_usage 
      exit 1 ;;    
  esac
done

# Check remaining arguments
if [ $# -ne 3 ]; then
  printf "\e[31m%s\n\t%s\e[0m\n" \
    "Invalid arguments. Script requires precisely 3 arguments:" \
    "robot_tag TITLE CONTACT_EMAIL TARGET_URL"
  exit 1
fi

printf "\e[32m%s\e[0m\n" "Fetching dependencies"
sudo apt install -y \
  wget \
  texlive-latex-extra

if [ ! -d "$TMP_DIR" ]; then mkdir "$TMP_DIR"; fi
wget -O "$IMAGE_TMP" "$IMAGE_URL"

printf "\e[32m%s\n\t%s\t\t%s\n\t%s\t\t%s\n\t%s\t%s\e[0m\n\n" \
  "Making a robot tag with values:" \
  "Title:" "$1" "Email:" "$2" "Target URL:" "$3"

pushd "$TMP_DIR"
pdflatex -jobname="$JOBNAME" << EOF
\\documentclass[24pt,portrait]{beamer}
\\usepackage[utf8]{inputenc}
\\usepackage{qrcode}
\\usepackage[orientation=portrait,size=a0,scale=6,debug]{beamerposter}

\\setbeamertemplate{caption}{\\raggedright\\insertcaption\\par}
\\usefonttheme{structurebold}

\\title{$1}
\\author{QUT Centre for Robotics}
\\date{April 2021}

\\usepackage{natbib}
\\usepackage{graphicx}

\\begin{document}
\\includegraphics[width=1.0\\textwidth]{$IMAGE_TMP}
\\centering
\\vspace{-2cm}\\\\
\\fontsize{200}{7.2}\\selectfont \\textbf{$1}\\\\
\\vspace{1cm}
\\color{red}\\fontsize{140}{7.2}\\selectfont {Scan me before use!}\\\\
\\color{black}
\\vspace{2cm}
\\begin{figure}[h!]
\\centering
\\hspace{10mm}\\qrcode[height=75cm]{$3}
\\vspace{2cm}
\\caption{Don't have access? Email $2}
\\end{figure}

\\end{document}
EOF
err=$?

printf "\n"
if [ "$err" -ne 0 ]; then
  printf "\e[33mFailed. See errors above.\e[0m\n"
  exit $err
fi

popd
mv "$TMP_DIR/$JOBNAME.pdf" "$JOBNAME.pdf"
printf "\e[32mFinished (see ./$JOBNAME.pdf)\e[0m\n"
