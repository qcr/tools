#!/usr/bin/env bash
#
# A light wrapper for using QCR tools. This is deliberately light, so that
# users should never have to update this script once they have it, but will
# always have access to the latest tools.
#
# It is also designed to work offline, and prompt you when updates are
# available. Please see https://github.com/qcr/tools for full details on how
# things work.
#
# Author: Ben Talbot
# Version: 0.5.0

set -uo pipefail

INSTALL_DIR="/var/tmp"
REPO_DIR="${INSTALL_DIR}/qcr"
REPO_CLONE_URL="git@github.com:qcr/tools"

INFO='\033[0;35m[INFO] '
ERROR='\033[0;31m[ERROR] '
NC='\033[0m'

# Bail if git isn't found
command -v git >& /dev/null || {
  printf "${ERROR}%s${NC}\n" "Command 'git' was not found, please install"
  exit 1
}

# Install if not installed
if [ ! -d "$REPO_DIR" ]; then
  # Check SSH key exists
    ssh -T git@github.com &>/dev/null
    RET=$?
    if [ $RET == 1 ]; then
        # user is authenticated, but fails to open a shell with GitHub
        printf "${INFO}${NC}User authenticated with GitHub via SSH\n"
    elif [ $RET == 255 ]; then
        # user is not authenticated
        printf "${ERROR}${NC}Unable to authenticate with GitHub via SSH.\nPlease make sure you have generated a SSH key on this computer and connected it with your GitHub account.\nSee https://docs.github.com/en/authentication/connecting-to-github-with-ssh/generating-a-new-ssh-key-and-adding-it-to-the-ssh-agent.\n"
        exit 1
    else
        printf "${ERROR}${NC}Unknown exit code in attempt to ssh into git@github.com\n"
        exit 2
    fi

  # Install
  printf "${INFO}${NC}%s\n" \
    "No cached version found. Installing to '$REPO_DIR'..."
  if ! git clone "$REPO_CLONE_URL" "$REPO_DIR"; then
    printf "${ERROR}${NC}%s\n" \
      "Install failed, please ensure machine has Internet access."
    exit 1
  fi
fi

# Defer to the main script
$REPO_DIR/qcr "$@"
